*** Starting uWSGI 2.0.17.1 (64bit) on [Mon Oct  8 20:39:59 2018] ***
compiled with version: 5.4.0 20160609 on 08 October 2018 12:33:38
os: Linux-4.13.0-37-generic #42~16.04.1-Ubuntu SMP Wed Mar 7 16:03:28 UTC 2018
nodename: haodong
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/haodong/haodong/AXF
writing pidfile to uwsgi.pid
detected binary path: /home/haodong/.virtualenvs/Django/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/haodong/haodong/AXF
your processes number limit is 15475
your memory page size is 4096 bytes
detected max file descriptor number: 1048576
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uWSGI http bound on 0.0.0.0:8888 fd 4
uwsgi socket 0 bound to TCP address 127.0.0.1:44861 (port auto-assigned) fd 3
Python version: 3.5.2 (default, Nov 23 2017, 16:37:01)  [GCC 5.4.0 20160609]
Python main interpreter initialized at 0x12fd490
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 834320 bytes (814 KB) for 40 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 3 seconds on interpreter 0x12fd490 pid: 5012 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5012)
spawned uWSGI worker 1 (pid: 5020, cores: 10)
spawned uWSGI worker 2 (pid: 5021, cores: 10)
spawned uWSGI worker 3 (pid: 5024, cores: 10)
spawned uWSGI worker 4 (pid: 5035, cores: 10)
spawned uWSGI http 1 (pid: 5042)
[pid: 5020|app: 0|req: 1/1] 127.0.0.1 () {38 vars in 741 bytes} [Mon Oct  8 21:12:44 2018] GET / => generated 74 bytes in 631 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 5021|app: 0|req: 1/2] 127.0.0.1 () {38 vars in 718 bytes} [Mon Oct  8 21:12:44 2018] GET /favicon.ico => generated 85 bytes in 256 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
gateway "uWSGI http 1" has been buried (pid: 5042)
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17.1 (64bit) on [Mon Oct  8 21:17:34 2018] ***
compiled with version: 5.4.0 20160609 on 08 October 2018 12:33:38
os: Linux-4.13.0-37-generic #42~16.04.1-Ubuntu SMP Wed Mar 7 16:03:28 UTC 2018
nodename: haodong
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/haodong/haodong/AXF
writing pidfile to uwsgi.pid
detected binary path: /home/haodong/.virtualenvs/Django/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/haodong/haodong/AXF
your processes number limit is 15475
your memory page size is 4096 bytes
detected max file descriptor number: 1048576
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 0.0.0.0:8888 fd 3
Python version: 3.5.2 (default, Nov 23 2017, 16:37:01)  [GCC 5.4.0 20160609]
Python main interpreter initialized at 0x9793b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 834320 bytes (814 KB) for 40 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x9793b0 pid: 5316 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5316)
spawned uWSGI worker 1 (pid: 5321, cores: 10)
spawned uWSGI worker 2 (pid: 5322, cores: 10)
spawned uWSGI worker 3 (pid: 5324, cores: 10)
spawned uWSGI worker 4 (pid: 5333, cores: 10)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17.1 (64bit) on [Mon Oct  8 21:24:13 2018] ***
compiled with version: 5.4.0 20160609 on 08 October 2018 12:33:38
os: Linux-4.13.0-37-generic #42~16.04.1-Ubuntu SMP Wed Mar 7 16:03:28 UTC 2018
nodename: haodong
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/haodong/haodong/AXF
writing pidfile to uwsgi.pid
detected binary path: /home/haodong/.virtualenvs/Django/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/haodong/haodong/AXF
your processes number limit is 15475
your memory page size is 4096 bytes
detected max file descriptor number: 1048576
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uWSGI http bound on 0.0.0.0:8888 fd 4
uwsgi socket 0 bound to TCP address 127.0.0.1:32867 (port auto-assigned) fd 3
Python version: 3.5.2 (default, Nov 23 2017, 16:37:01)  [GCC 5.4.0 20160609]
Python main interpreter initialized at 0x148a490
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 834320 bytes (814 KB) for 40 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x148a490 pid: 5453 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5453)
spawned uWSGI worker 1 (pid: 5458, cores: 10)
spawned uWSGI worker 2 (pid: 5459, cores: 10)
spawned uWSGI worker 3 (pid: 5478, cores: 10)
spawned uWSGI worker 4 (pid: 5479, cores: 10)
spawned uWSGI http 1 (pid: 5489)
[pid: 5459|app: 0|req: 1/1] 127.0.0.1 () {38 vars in 759 bytes} [Mon Oct  8 21:24:50 2018] GET /axf/mine/ => generated 5571 bytes in 594 msecs (HTTP/1.1 200) 4 headers in 124 bytes (1 switches on core 0)
[pid: 5459|app: 0|req: 2/2] 127.0.0.1 () {38 vars in 728 bytes} [Mon Oct  8 21:24:50 2018] GET /static/css/swiper.css => generated 95 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 7)
[pid: 5459|app: 0|req: 3/3] 127.0.0.1 () {38 vars in 742 bytes} [Mon Oct  8 21:24:50 2018] GET /static/axf/main/css/mine.css => generated 102 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 7)
[pid: 5459|app: 0|req: 4/4] 127.0.0.1 () {38 vars in 709 bytes} [Mon Oct  8 21:24:50 2018] GET /static/js/jquery.js => generated 93 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 7)
[pid: 5478|app: 0|req: 1/5] 127.0.0.1 () {38 vars in 726 bytes} [Mon Oct  8 21:24:50 2018] GET /static/css/reset.css => generated 94 bytes in 285 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 5458|app: 0|req: 2/6] 127.0.0.1 () {38 vars in 734 bytes} [Mon Oct  8 21:24:50 2018] GET /static/css/bootstrap.css => generated 98 bytes in 301 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 9)
[pid: 5458|app: 0|req: 2/7] 127.0.0.1 () {38 vars in 742 bytes} [Mon Oct  8 21:24:50 2018] GET /static/axf/main/css/main.css => generated 102 bytes in 281 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 2)
[pid: 5459|app: 0|req: 5/8] 127.0.0.1 () {38 vars in 715 bytes} [Mon Oct  8 21:24:50 2018] GET /static/js/bootstrap.js => generated 96 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 3)
[pid: 5458|app: 0|req: 3/9] 127.0.0.1 () {38 vars in 705 bytes} [Mon Oct  8 21:24:50 2018] GET /static/js/base.js => generated 91 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 1)
[pid: 5459|app: 0|req: 6/10] 127.0.0.1 () {38 vars in 723 bytes} [Mon Oct  8 21:24:50 2018] GET /static/axf/main/js/mine.js => generated 100 bytes in 0 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 3)
[pid: 5458|app: 0|req: 4/11] 127.0.0.1 () {38 vars in 805 bytes} [Mon Oct  8 21:24:50 2018] GET /static/uploads/icons/2018/09/29/%E5%9B%BE%E7%89%871.png => generated 117 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 1)
[pid: 5458|app: 0|req: 5/12] 127.0.0.1 () {38 vars in 705 bytes} [Mon Oct  8 21:24:51 2018] GET /static/js/base.js => generated 91 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 4)
[pid: 5458|app: 0|req: 6/13] 127.0.0.1 () {38 vars in 723 bytes} [Mon Oct  8 21:24:51 2018] GET /static/axf/main/js/mine.js => generated 100 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 4)
[pid: 5458|app: 0|req: 7/14] 127.0.0.1 () {40 vars in 790 bytes} [Mon Oct  8 21:24:55 2018] GET /axf/mine/ => generated 5571 bytes in 41 msecs (HTTP/1.1 200) 4 headers in 124 bytes (1 switches on core 8)
[pid: 5459|app: 0|req: 7/15] 127.0.0.1 () {38 vars in 734 bytes} [Mon Oct  8 21:24:55 2018] GET /static/css/bootstrap.css => generated 98 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 3)
[pid: 5458|app: 0|req: 8/16] 127.0.0.1 () {38 vars in 726 bytes} [Mon Oct  8 21:24:55 2018] GET /static/css/reset.css => generated 94 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 7)
[pid: 5458|app: 0|req: 9/17] 127.0.0.1 () {38 vars in 742 bytes} [Mon Oct  8 21:24:55 2018] GET /static/axf/main/css/main.css => generated 102 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 7)
[pid: 5458|app: 0|req: 10/18] 127.0.0.1 () {38 vars in 742 bytes} [Mon Oct  8 21:24:55 2018] GET /static/axf/main/css/mine.css => generated 102 bytes in 0 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 7)
[pid: 5458|app: 0|req: 11/19] 127.0.0.1 () {38 vars in 715 bytes} [Mon Oct  8 21:24:55 2018] GET /static/js/bootstrap.js => generated 96 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 7)
[pid: 5479|app: 0|req: 5/20] 127.0.0.1 () {38 vars in 709 bytes} [Mon Oct  8 21:24:55 2018] GET /static/js/jquery.js => generated 93 bytes in 340 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 8)
[pid: 5479|app: 0|req: 5/21] 127.0.0.1 () {38 vars in 723 bytes} [Mon Oct  8 21:24:55 2018] GET /static/axf/main/js/mine.js => generated 100 bytes in 327 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 6)
[pid: 5479|app: 0|req: 5/22] 127.0.0.1 () {38 vars in 705 bytes} [Mon Oct  8 21:24:55 2018] GET /static/js/base.js => generated 91 bytes in 329 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 5)
[pid: 5479|app: 0|req: 5/23] 127.0.0.1 () {38 vars in 728 bytes} [Mon Oct  8 21:24:55 2018] GET /static/css/swiper.css => generated 95 bytes in 363 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 5479|app: 0|req: 5/24] 127.0.0.1 () {38 vars in 805 bytes} [Mon Oct  8 21:24:55 2018] GET /static/uploads/icons/2018/09/29/%E5%9B%BE%E7%89%871.png => generated 117 bytes in 350 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 9)
[pid: 5458|app: 0|req: 12/25] 127.0.0.1 () {38 vars in 715 bytes} [Mon Oct  8 21:24:55 2018] GET /static/js/bootstrap.js => generated 96 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 7)
[pid: 5459|app: 0|req: 8/26] 127.0.0.1 () {38 vars in 705 bytes} [Mon Oct  8 21:24:55 2018] GET /static/js/base.js => generated 91 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 3)
[pid: 5478|app: 0|req: 2/27] 127.0.0.1 () {38 vars in 723 bytes} [Mon Oct  8 21:24:55 2018] GET /static/axf/main/js/mine.js => generated 100 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 6)
SIGINT/SIGQUIT received...killing workers...
gateway "uWSGI http 1" has been buried (pid: 5489)
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17.1 (64bit) on [Mon Oct  8 21:29:47 2018] ***
compiled with version: 5.4.0 20160609 on 08 October 2018 12:33:38
os: Linux-4.13.0-37-generic #42~16.04.1-Ubuntu SMP Wed Mar 7 16:03:28 UTC 2018
nodename: haodong
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/haodong/haodong/AXF
writing pidfile to uwsgi.pid
detected binary path: /home/haodong/.virtualenvs/Django/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/haodong/haodong/AXF
your processes number limit is 15475
your memory page size is 4096 bytes
detected max file descriptor number: 1048576
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 0.0.0.0:8888 fd 3
Python version: 3.5.2 (default, Nov 23 2017, 16:37:01)  [GCC 5.4.0 20160609]
Python main interpreter initialized at 0x10a73b0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 834320 bytes (814 KB) for 40 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x10a73b0 pid: 5606 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 5606)
spawned uWSGI worker 1 (pid: 5611, cores: 10)
spawned uWSGI worker 2 (pid: 5612, cores: 10)
spawned uWSGI worker 3 (pid: 5622, cores: 10)
spawned uWSGI worker 4 (pid: 5632, cores: 10)
[pid: 5611|app: 0|req: 1/1] 127.0.0.1 () {42 vars in 817 bytes} [Mon Oct  8 21:30:00 2018] GET /axf/mine/ => generated 5571 bytes in 280 msecs (HTTP/1.1 200) 4 headers in 124 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.17.1 (64bit) on [Tue Oct  9 08:41:29 2018] ***
compiled with version: 5.4.0 20160609 on 08 October 2018 12:33:38
os: Linux-4.13.0-37-generic #42~16.04.1-Ubuntu SMP Wed Mar 7 16:03:28 UTC 2018
nodename: haodong
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/haodong/haodong/AXF
writing pidfile to uwsgi.pid
detected binary path: /home/haodong/.virtualenvs/Django/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/haodong/haodong/AXF
your processes number limit is 15475
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 0.0.0.0:8888 fd 3
Python version: 3.5.2 (default, Nov 23 2017, 16:37:01)  [GCC 5.4.0 20160609]
Python main interpreter initialized at 0x25aa370
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 834320 bytes (814 KB) for 40 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x25aa370 pid: 7645 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7645)
spawned uWSGI worker 1 (pid: 7647, cores: 10)
spawned uWSGI worker 2 (pid: 7648, cores: 10)
spawned uWSGI worker 3 (pid: 7650, cores: 10)
spawned uWSGI worker 4 (pid: 7671, cores: 10)
[pid: 7647|app: 0|req: 1/1] 127.0.0.1 () {48 vars in 933 bytes} [Tue Oct  9 08:42:37 2018] GET / => generated 74 bytes in 254 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 3)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
